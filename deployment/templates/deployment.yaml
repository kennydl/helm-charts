apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ required "Missing .Values.name" .Values.name }}
  namespace: {{ required "Missing .Values.namespace" .Values.namespace }}
spec:
  {{- if not .Values.replicaCount }}
  replicas: {{ required "Missing .Values.replicaCount" .Values.replicaCount }}
  {{- else if kindIs "float64" .Values.replicaCount }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ required "Missing .Values.name" .Values.name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ required "Missing .Values.name" .Values.name }}
    spec:
      serviceAccountName: {{ required "Missing .Values.name" .Values.name }}
      imagePullSecrets:
        - name: {{ required "Missing .Values.imagePullSecret" .Values.imagePullSecret }}
      {{- if .Values.securityContext }}
      securityContext: {{- toYaml .Values.securityContext | nindent 8 }}
      # {{- else }}
      # securityContext:
      #   seccompProfile:
      #     type: RuntimeDefault
      #   runAsUser: 5000
      #   runAsGroup: 5000
      #   fsGroup: 5000
      #   supplementalGroups: [5000]
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      containers:
      - name: {{ required "Missing .Values.name" .Values.name }}
        {{- with .Values.env }}
        env:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        image: {{ include "image" . }}
        imagePullPolicy: Always
        # securityContext:
        #   allowPrivilegeEscalation: false
        resources:
          limits:
            cpu: {{ required "Missing .Values.resources.limits.cpu" .Values.resources.limits.cpu }}
            memory:  {{ required "Missing .Values.resources.limits.memory" .Values.resources.limits.memory }}
          requests:
            cpu: {{ required "Missing .Values.resources.requests.cpu" .Values.resources.requests.cpu }}
            memory: {{ required "Missing .Values.resources.requests.memory" .Values.resources.requests.memory }}
        {{- with .Values.lifecycle }}
        lifecycle:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.startupProbe }}
        startupProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.sidecars }}
      {{- range $sidecarKey, $sidecarValue := .Values.sidecars }}
      {{- $data := dict "sidecar" $sidecarValue "tag" $.Values.image.tag "namespace" $.Values.namespace}}
      - name: {{ required "Missing $sidecarValue.name" $sidecarValue.name }}
        {{- with $.Values.env}}
        env:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        image: {{ include "sidecar.image" $data }}
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
        resources:
         {{- if $sidecarValue.resources}}
          {{- toYaml $sidecarValue.resources | nindent 10 }}
         {{else}}
          {{ required "Missing .sidecar.resources" $sidecarValue.resources }}
         {{end}}
        {{- end }}
      {{- end}}